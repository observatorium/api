components:
  schemas:
    Rules:
      type: object
      required:
        - groups
      properties:
        groups:
          type: array
          items:
            $ref: "#/components/schemas/RuleGroupEvaluated"
    RulesRaw:
      type: object
      required:
        - groups
      properties:
        groups:
          type: array
          items:
            $ref: "#/components/schemas/RuleGroup"
    RuleGroup:
      type: object
      required:
        - name
        - rules
      properties:
        interval:
          type: number
        name:
          type: string
          example: "telemeter.rules"
        rules:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RecordingRule"
              - $ref: "#/components/schemas/AlertingRule"
    RuleGroupEvaluated:
      type: object
      required:
        - name
        - rules
      properties:
        interval:
          type: number
        name:
          type: string
          example: "telemeter.rules"
        file:
          type: string
          example: "rules.yaml"
        limit:
          type: number
          example: 0
        evaluationTime:
          type: number
          example: 0.002900887
        lastEvaluation:
          type: string
          example: "2022-02-20T15:32:12.759781322Z"
        partialResponseStrategy:
          type: string
          example: "WARN"
        rules:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RecordingRuleEvaluated"
              - $ref: "#/components/schemas/AlertingRuleEvaluated"
    RecordingRule:
      type: object
      required:
        - expr
        - record
      properties:
        expr:
          type: string
          example: 'count by (name) (cluster{condition="halted"} == 1)'
        record:
          type: string
          example: "count:cluster_halted"
        labels:
          type: object
          additionalProperties:
            type: string
    RecordingRuleEvaluated:
      type: object
      required:
        - query
        - name
      properties:
        query:
          type: string
          example: 'count by (name) (cluster{condition="halted"} == 1)'
        name:
          type: string
          example: "count:cluster_halted"
        health:
          type: string
          example: "ok"
        evaluationTime:
          type: number
          example: 0.002900887
        lastError:
          type: string
        lastEvaluation:
          type: string
          example: "2022-02-20T15:32:12.759781322Z"
        type:
          type: string
          enum:
            - recording
        labels:
          type: object
          additionalProperties:
            type: string
    AlertingRule:
      type: object
      required:
        - alert
        - expr
      properties:
        alert:
          type: string
          example: "HighRequestLatency"
        expr:
          type: string
          example: 'job:request_latency_seconds:mean5m{job="myjob"} > 0.5'
        for:
          type: string
          example: "10m"
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
    AlertingRuleEvaluated:
      type: object
      required:
        - query
        - name
      properties:
        alerts:
          type: array
          items:
            $ref: "#/components/schemas/ActiveAlert"
        query:
          type: string
          example: 'job:request_latency_seconds:mean5m{job="myjob"} > 0.5'
        name:
          type: string
          example: "count:cluster_halted"
        health:
          type: string
          example: "ok"
        evaluationTime:
          type: number
          example: 0.002900887
        lastError:
          type: string
        lastEvaluation:
          type: string
          example: "2022-02-20T15:32:12.759781322Z"
        type:
          type: string
          enum:
            - alerting
        duration:
          type: number
          example: 600
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
    ActiveAlert:
      type: object
      required:
        - activeAt
        - state
        - value
      properties:
        activeAt:
          type: string
          example: "2018-07-04T20:27:12.60602144+02:00"
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        state:
          type: string
          example: "firing"
        value:
          type: string
          example: "1e+00"
    MetricInstantQueryResponse:
      type: object
      required:
        - resultType
        - result
      properties:
        resultType:
          type: string
          enum:
            - matrix
            - vector
            - scalar
            - string
            - streams
        result:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RangeVectors" #matrix
              - $ref: "#/components/schemas/InstantVectors" #vector
              - $ref: "#/components/schemas/ScalarOrString" # scalar
              - $ref: "#/components/schemas/ScalarOrString" #string 
              - $ref: "#/components/schemas/StreamValues" #streams
    MetricRangeQueryResponse:
      type: object
      required:
        - resultType
        - result
      properties:
        resultType:
          type: string
          enum:
            - matrix
        result:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RangeVectors"
    RangeVectors:
      type: object
      required:
        - metric
        - values
      properties:
        metric:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            type: array
            $ref: "#/components/schemas/ScalarOrString"
    InstantVectors:
      type: object
      required:
        - metric
        - values
      properties:
        metric:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/ScalarOrString"
    StreamValues:
      type: object
      required:
        - stream
        - values
      properties:
        stream:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/ScalarOrString"
    PushLogs:
      type: object
      required:
        - stream
        - values
      properties:
        stream:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/ScalarOrString"
    TailLogs:
      type: object
      required:
        - labels
        - timestamp
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
        timestamp:
          type: string
          format: unix_timestamp
    ScalarOrString:
      type: array
      items:
        oneOf:
          - type: string
            format: unix_timestamp
          - type: string
            format: sample_value
    LogSeriesRequest:
      type: object
      required:
        - match[]
      properties:
        match[]:
          type: array
          items:
            type: string
        start:
          type: string
          format: rfc3339 | unix_timestamp
        end:
          type: string
          format: rfc3339 | unix_timestamp
    LogInstantQueryResponse:
      type: object
      required:
        - resultType
        - result
      properties:
        resultType:
          type: string
          enum:
            - matrix
            - vector
            - scalar
            - string
            - streams
        result:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RangeVectors" #matrix
              - $ref: "#/components/schemas/InstantVectors" #vector
              - $ref: "#/components/schemas/ScalarOrString" # scalar
              - $ref: "#/components/schemas/ScalarOrString" #string 
              - $ref: "#/components/schemas/StreamValues" #streams
    LogRangeQueryResponse:
      type: object
      required:
        - resultType
        - result
      properties:
        resultType:
          type: string
          enum:
            - matrix
        result:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RangeVectors"
